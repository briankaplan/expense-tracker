name: CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]

    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Setup PNPM
      uses: pnpm/action-setup@v2
      with:
        version: latest
        
    - name: Install dependencies
      run: pnpm install
      
    - name: Check types
      run: pnpm tsc --noEmit
      
    - name: Lint
      run: pnpm lint
      
    - name: Check environment setup
      run: pnpm check-env
      env:
        NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
        NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
        NEXT_PUBLIC_R2_ACCOUNT_ID: ${{ secrets.NEXT_PUBLIC_R2_ACCOUNT_ID }}
        NEXT_PUBLIC_R2_ACCESS_KEY_ID: ${{ secrets.NEXT_PUBLIC_R2_ACCESS_KEY_ID }}
        NEXT_PUBLIC_R2_SECRET_ACCESS_KEY: ${{ secrets.NEXT_PUBLIC_R2_SECRET_ACCESS_KEY }}
        NEXT_PUBLIC_R2_BUCKET_NAME: ${{ secrets.NEXT_PUBLIC_R2_BUCKET_NAME }}
        NEXT_PUBLIC_R2_PUBLIC_URL: ${{ secrets.NEXT_PUBLIC_R2_PUBLIC_URL }}
        NEXT_PUBLIC_MINDEE_API_KEY: ${{ secrets.NEXT_PUBLIC_MINDEE_API_KEY }}
        NEXT_PUBLIC_TELLER_APP_ID: ${{ secrets.NEXT_PUBLIC_TELLER_APP_ID }}
        NEXT_PUBLIC_TELLER_ENV: ${{ secrets.NEXT_PUBLIC_TELLER_ENV }}
        NEXT_PUBLIC_TELLER_API_URL: ${{ secrets.NEXT_PUBLIC_TELLER_API_URL }}
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        ENCRYPTION_KEY: ${{ secrets.ENCRYPTION_KEY }}
      
    - name: Build
      run: pnpm build
      
    - name: Test
      run: pnpm test
      
  security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Security scan
      uses: snyk/actions/node@master
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        ignore-unfixed: true
        format: 'table'
        severity: 'CRITICAL,HIGH'

  deploy:
    needs: [build, security]
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        
    - name: Setup PNPM
      uses: pnpm/action-setup@v2
      with:
        version: latest
        
    - name: Install dependencies
      run: pnpm install
      
    - name: Build
      run: pnpm build
      env:
        NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
        NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
        NEXT_PUBLIC_R2_ACCOUNT_ID: ${{ secrets.NEXT_PUBLIC_R2_ACCOUNT_ID }}
        NEXT_PUBLIC_R2_ACCESS_KEY_ID: ${{ secrets.NEXT_PUBLIC_R2_ACCESS_KEY_ID }}
        NEXT_PUBLIC_R2_SECRET_ACCESS_KEY: ${{ secrets.NEXT_PUBLIC_R2_SECRET_ACCESS_KEY }}
        NEXT_PUBLIC_R2_BUCKET_NAME: ${{ secrets.NEXT_PUBLIC_R2_BUCKET_NAME }}
        NEXT_PUBLIC_R2_PUBLIC_URL: ${{ secrets.NEXT_PUBLIC_R2_PUBLIC_URL }}
        NEXT_PUBLIC_MINDEE_API_KEY: ${{ secrets.NEXT_PUBLIC_MINDEE_API_KEY }}
        NEXT_PUBLIC_TELLER_APP_ID: ${{ secrets.NEXT_PUBLIC_TELLER_APP_ID }}
        NEXT_PUBLIC_TELLER_ENV: ${{ secrets.NEXT_PUBLIC_TELLER_ENV }}
        NEXT_PUBLIC_TELLER_API_URL: ${{ secrets.NEXT_PUBLIC_TELLER_API_URL }}
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        ENCRYPTION_KEY: ${{ secrets.ENCRYPTION_KEY }}
        
    - name: Deploy to Vercel
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
        vercel-args: '--prod' 